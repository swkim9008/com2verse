/*===============================================================
* Product:    Com2Verse
* File Name:  AudioMixerIndexer.cs
* Developer:  yangsehoon
* Date:       2022-04-12 15:00
* History:    
* Documents:  Audio group enum auto generator
* Copyright â“’ Com2us. All rights reserved.
 ================================================================*/

#if UNITY_EDITOR
using System.IO;
using System.Text;
using Com2Verse.SoundSystem;
using UnityEditor;
using UnityEngine.Audio;

namespace Com2VerseEditor.SoundSystem
{
    public class AudioMixerIndexer : AssetModificationProcessor
    {
        private static string[] OnWillSaveAssets(string[] paths)
        {
            foreach (string path in paths)
            {
                if (path.Contains("Com2verseMainMixer.mixer"))
                {
                    AudioMixer mainMixer = AssetDatabase.LoadAssetAtPath<AudioMixer>(path);
                    MakeAudioMixerIndex(mainMixer);
                    MakeAudioSnapshotIndex(mainMixer);
                }
            }

            return paths;
        }

        public static void MakeAudioMixerIndex(AudioMixer mainMixer)
        {
            StringBuilder str = new StringBuilder();

            str.AppendLine("// This file was generated by AudioMixerIndexer");
            str.AppendLine("namespace Com2Verse.SoundSystem");
            str.AppendLine("{");
            str.AppendLine("\tpublic enum eAudioMixerGroup");
            str.AppendLine("\t{");
            str.AppendLine("\t\tMASTER = 0,");
            var groups = mainMixer.FindMatchingGroups("Master/");
            foreach (var group in groups)
            {
                if (!group.name.StartsWith('*'))
                {
                    int index = group.name.LastIndexOf("_");
                    
                    str.AppendLine($"\t\t{group.name.Substring(0, index)} = {group.name.Substring(index + 1)},");
                }
            }

            str.AppendLine("\t}");
            str.AppendLine("}");

            File.WriteAllText(SoundManagerSetting.instance.AudioMixerIndexFileName, str.ToString());
            AssetDatabase.ImportAsset(SoundManagerSetting.instance.AudioMixerIndexFileName);
        }

        public static void MakeAudioSnapshotIndex(AudioMixer mainMixer)
        {
            StringBuilder str = new StringBuilder();
            StringBuilder str2 = new StringBuilder();

            str.AppendLine("// This file was generated by AudioMixerIndexer");
            str.AppendLine("namespace Com2Verse.SoundSystem");
            str.AppendLine("{");

            // enum eAudioSnapshot
            str.AppendLine("\tpublic enum eAudioSnapshot");
            str.AppendLine("\t{");
            int i = 0;
            var snapshots = (AudioMixerSnapshot[]) mainMixer.GetType().GetProperty("snapshots").GetValue(mainMixer, null);
            foreach (var snapshot in snapshots)
            {
                str.AppendLine($"\t\t{snapshot.name.ToUpper()} = {i},");
                str2.AppendLine($"\t\t\t{{{i++}, \"{snapshot.name}\"}},");
            }

            str.Append("\t}\n");

            // snapshot name dictionary
            str.AppendLine("\tpublic static class AudioSnapshotInfo");
            str.AppendLine("\t{");
            str.AppendLine("\t\tpublic static readonly System.Collections.Generic.Dictionary<int, string> SnapshotMap = new System.Collections.Generic.Dictionary<int, string>()");
            str.AppendLine("\t\t{");
            str.Append(str2);
            str.AppendLine("\t\t};");
            str.AppendLine("\t}");

            str.AppendLine("}");

            File.WriteAllText(SoundManagerSetting.instance.AudioSnapshotIndexFileName, str.ToString());
            AssetDatabase.ImportAsset(SoundManagerSetting.instance.AudioSnapshotIndexFileName);
        }
    }
}
#endif
